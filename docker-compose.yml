version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: securesnap-postgres
    environment:
      POSTGRES_DB: securesnap
      POSTGRES_USER: securesnap
      POSTGRES_PASSWORD: securesnap_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U securesnap"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: securesnap-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: securesnap-app
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://securesnap:securesnap_dev_password@postgres:5432/securesnap
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev_jwt_secret_change_in_production
      ENCRYPTION_KEY: dev_encryption_key_32_characters_
    ports:
      - "3000:3000"  # Frontend
      - "5000:5000"  # Backend
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        npm run db:migrate &&
        npm run dev:all
      "

  # Adminer (Database UI)
  adminer:
    image: adminer:latest
    container_name: securesnap-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres

  # MinIO (S3-compatible storage for local dev)
  minio:
    image: minio/minio:latest
    container_name: securesnap-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  default:
    name: securesnap-network